"""adding relationship between different models

Revision ID: 10ee138edc34
Revises: fcdc15e94e68
Create Date: 2025-02-10 10:30:39.929995

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '10ee138edc34'
down_revision = 'fcdc15e94e68'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('chats', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('business_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('message',
               existing_type=mysql.VARCHAR(length=140),
               type_=sa.Text(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False)

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('business_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('location_id', sa.Integer(), nullable=False))
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('description',
               existing_type=mysql.VARCHAR(length=140),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('date',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.create_foreign_key(None, 'locations', ['location_id'], ['id'])
        batch_op.create_foreign_key(None, 'businesses', ['business_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('location')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', mysql.VARCHAR(length=140), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('date',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.Text(),
               type_=mysql.VARCHAR(length=140),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=64),
               nullable=True)
        batch_op.drop_column('location_id')
        batch_op.drop_column('business_id')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('chats', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('message',
               existing_type=sa.Text(),
               type_=mysql.VARCHAR(length=140),
               nullable=True)
        batch_op.alter_column('business_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###
